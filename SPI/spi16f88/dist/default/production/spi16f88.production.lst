

Microchip Technology PIC LITE Macro Assembler V1.21 build 54009 
                                                                                               Sun Dec  8 18:37:51 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     	;# 
    14  0001                     	;# 
    15  0002                     	;# 
    16  0003                     	;# 
    17  0004                     	;# 
    18  0005                     	;# 
    19  0006                     	;# 
    20  000A                     	;# 
    21  000B                     	;# 
    22  000C                     	;# 
    23  000D                     	;# 
    24  000E                     	;# 
    25  000E                     	;# 
    26  000F                     	;# 
    27  0010                     	;# 
    28  0011                     	;# 
    29  0012                     	;# 
    30  0013                     	;# 
    31  0014                     	;# 
    32  0015                     	;# 
    33  0015                     	;# 
    34  0016                     	;# 
    35  0017                     	;# 
    36  0018                     	;# 
    37  0019                     	;# 
    38  001A                     	;# 
    39  001E                     	;# 
    40  001F                     	;# 
    41  0081                     	;# 
    42  0085                     	;# 
    43  0086                     	;# 
    44  008C                     	;# 
    45  008D                     	;# 
    46  008E                     	;# 
    47  008F                     	;# 
    48  0090                     	;# 
    49  0092                     	;# 
    50  0093                     	;# 
    51  0094                     	;# 
    52  0098                     	;# 
    53  0099                     	;# 
    54  009B                     	;# 
    55  009C                     	;# 
    56  009D                     	;# 
    57  009E                     	;# 
    58  009F                     	;# 
    59  0105                     	;# 
    60  010C                     	;# 
    61  010D                     	;# 
    62  010E                     	;# 
    63  010F                     	;# 
    64  018C                     	;# 
    65  018D                     	;# 
    66  0017                     _CCP1CONbits	set	23
    67  000B                     _INTCON	set	11
    68  000C                     _PIR1bits	set	12
    69  0006                     _PORTBbits	set	6
    70  0018                     _RCSTAbits	set	24
    71  0013                     _SSPBUF	set	19
    72  0014                     _SSPCONbits	set	20
    73  008F                     _OSCCON	set	143
    74  0094                     _SSPSTATbits	set	148
    75  0085                     _TRISAbits	set	133
    76  0086                     _TRISBbits	set	134
    77                           
    78                           	psect	text0
    79  0000                     __ptext0:	
    80                           
    81                           ;psect for function _ReadSPI
    82                           ; #config settings
    83  0000                     
    84                           	psect	cinit
    85  07FD                     start_initialization:	
    86  07FD                     __initialization:	
    87  07FD                     end_of_initialization:	
    88                           ;End of C runtime variable initialization code
    89                           
    90  07FD                     __end_of__initialization:	
    91  07FD  0183               	clrf	3
    92  07FE  118A  2F11         	ljmp	_main	;jump to C main() function
    93                           
    94                           	psect	cstackCOMMON
    95  0070                     __pcstackCOMMON:	
    96  0070                     ?_main:	
    97  0070                     ?_ReadSPI:	
    98                           ; 0 bytes @ 0x0
    99                           
   100  0070                     ?___wmul:	
   101                           ; 2 bytes @ 0x0
   102                           
   103  0070                     ___wmul@multiplier:	
   104                           ; 2 bytes @ 0x0
   105                           
   106                           
   107                           ; 2 bytes @ 0x0
   108  0070                     	ds	2
   109  0072                     ??_ReadSPI:	
   110  0072                     ___wmul@multiplicand:	
   111                           ; 0 bytes @ 0x2
   112                           
   113                           
   114                           ; 2 bytes @ 0x2
   115  0072                     	ds	2
   116  0074                     ??___wmul:	
   117  0074                     ReadSPI@databyte:	
   118                           ; 0 bytes @ 0x4
   119                           
   120  0074                     ___wmul@product:	
   121                           ; 2 bytes @ 0x4
   122                           
   123                           
   124                           ; 2 bytes @ 0x4
   125  0074                     	ds	2
   126  0076                     ?___awdiv:	
   127  0076                     ___awdiv@divisor:	
   128                           ; 2 bytes @ 0x6
   129                           
   130                           
   131                           ; 2 bytes @ 0x6
   132  0076                     	ds	2
   133  0078                     ___awdiv@dividend:	
   134                           
   135                           ; 2 bytes @ 0x8
   136  0078                     	ds	2
   137  007A                     ??___awdiv:	
   138                           
   139                           ; 0 bytes @ 0xA
   140  007A                     	ds	1
   141                           
   142                           	psect	cstackBANK0
   143  0020                     __pcstackBANK0:	
   144  0020                     ___awdiv@counter:	
   145                           
   146                           ; 1 bytes @ 0x0
   147  0020                     	ds	1
   148  0021                     ___awdiv@sign:	
   149                           
   150                           ; 1 bytes @ 0x1
   151  0021                     	ds	1
   152  0022                     ___awdiv@quotient:	
   153                           
   154                           ; 2 bytes @ 0x2
   155  0022                     	ds	2
   156  0024                     ??_main:	
   157                           
   158                           ; 0 bytes @ 0x4
   159  0024                     	ds	4
   160  0028                     main@Text:	
   161                           
   162                           ; 4 bytes @ 0x8
   163  0028                     	ds	4
   164  002C                     main@Tint:	
   165                           
   166                           ; 4 bytes @ 0xC
   167  002C                     	ds	4
   168  0030                     main@calInt:	
   169                           
   170                           ; 1 bytes @ 0x10
   171  0030                     	ds	1
   172  0031                     main@MAXdata:	
   173                           
   174                           ; 4 bytes @ 0x11
   175  0031                     	ds	4
   176  0035                     main@raw:	
   177                           
   178                           ; 4 bytes @ 0x15
   179  0035                     	ds	4
   180                           
   181                           	psect	maintext
   182  0711                     __pmaintext:	
   183 ;;
   184 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   185 ;;
   186 ;; *************** function _main *****************
   187 ;; Defined at:
   188 ;;		line 72 in file "main.c"
   189 ;; Parameters:    Size  Location     Type
   190 ;;		None
   191 ;; Auto vars:     Size  Location     Type
   192 ;;  raw             4   21[BANK0 ] struct .
   193 ;;  MAXdata         4   17[BANK0 ] struct .
   194 ;;  Tint            4   12[BANK0 ] long 
   195 ;;  Text            4    8[BANK0 ] long 
   196 ;;  calInt          1   16[BANK0 ] unsigned char 
   197 ;; Return value:  Size  Location     Type
   198 ;;		None               void
   199 ;; Registers used:
   200 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   201 ;; Tracked objects:
   202 ;;		On entry : 17F/0
   203 ;;		On exit  : 0/0
   204 ;;		Unchanged: 0/0
   205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   206 ;;      Params:         0       0       0       0       0
   207 ;;      Locals:         0      17       0       0       0
   208 ;;      Temps:          0       4       0       0       0
   209 ;;      Totals:         0      21       0       0       0
   210 ;;Total ram usage:       21 bytes
   211 ;; Hardware stack levels required when called:    1
   212 ;; This function calls:
   213 ;;		_ReadSPI
   214 ;;		___awdiv
   215 ;;		___wmul
   216 ;; This function is called by:
   217 ;;		Startup code after reset
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221                           
   222                           ;psect for function _main
   223  0711                     _main:	
   224                           
   225                           ;main.c: 74: long int Text=0,Tint=0;
   226                           
   227                           ;incstack = 0
   228                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   229  0711  3000               	movlw	0
   230  0712  1283               	bcf	3,5	;RP0=0, select bank0
   231  0713  1303               	bcf	3,6	;RP1=0, select bank0
   232  0714  00AB               	movwf	main@Text+3
   233  0715  3000               	movlw	0
   234  0716  00AA               	movwf	main@Text+2
   235  0717  3000               	movlw	0
   236  0718  00A9               	movwf	main@Text+1
   237  0719  3000               	movlw	0
   238  071A  00A8               	movwf	main@Text
   239  071B  3000               	movlw	0
   240  071C  00AF               	movwf	main@Tint+3
   241  071D  3000               	movlw	0
   242  071E  00AE               	movwf	main@Tint+2
   243  071F  3000               	movlw	0
   244  0720  00AD               	movwf	main@Tint+1
   245  0721  3000               	movlw	0
   246  0722  00AC               	movwf	main@Tint
   247                           
   248                           ;main.c: 75: MAXreg MAXdata;
   249                           ;main.c: 76: int32_t raw;
   250                           ;main.c: 77: char calInt;
   251                           ;main.c: 79: OSCCON=0b01111100;
   252  0723  307C               	movlw	124
   253  0724  1683               	bsf	3,5	;RP0=1, select bank1
   254  0725  1303               	bcf	3,6	;RP1=0, select bank1
   255  0726  008F               	movwf	15	;volatile
   256                           
   257                           ;main.c: 80: TRISAbits.TRISA6=0;
   258  0727  1305               	bcf	5,6	;volatile
   259                           
   260                           ;main.c: 84: INTCON=0;
   261  0728  018B               	clrf	11	;volatile
   262                           
   263                           ;main.c: 87: CCP1CONbits.CCP1M=0;
   264  0729  30F0               	movlw	-16
   265  072A  1283               	bcf	3,5	;RP0=0, select bank0
   266  072B  1303               	bcf	3,6	;RP1=0, select bank0
   267  072C  0597               	andwf	23,f	;volatile
   268                           
   269                           ;main.c: 88: RCSTAbits.SPEN=0;
   270  072D  1398               	bcf	24,7	;volatile
   271                           
   272                           ;main.c: 92: TRISBbits.TRISB1=1;
   273  072E  1683               	bsf	3,5	;RP0=1, select bank1
   274  072F  1303               	bcf	3,6	;RP1=0, select bank1
   275  0730  1486               	bsf	6,1	;volatile
   276                           
   277                           ;main.c: 93: TRISBbits.TRISB2=0;
   278  0731  1106               	bcf	6,2	;volatile
   279                           
   280                           ;main.c: 94: TRISBbits.TRISB4=0;
   281  0732  1206               	bcf	6,4	;volatile
   282                           
   283                           ;main.c: 95: TRISBbits.TRISB3=0;
   284  0733  1186               	bcf	6,3	;volatile
   285                           
   286                           ;main.c: 97: SSPCONbits.CKP=0;
   287  0734  1283               	bcf	3,5	;RP0=0, select bank0
   288  0735  1303               	bcf	3,6	;RP1=0, select bank0
   289  0736  1214               	bcf	20,4	;volatile
   290                           
   291                           ;main.c: 98: SSPCONbits.SSPM0=0;
   292  0737  1014               	bcf	20,0	;volatile
   293                           
   294                           ;main.c: 99: SSPCONbits.SSPM1=1;
   295  0738  1494               	bsf	20,1	;volatile
   296                           
   297                           ;main.c: 100: SSPCONbits.SSPM2=0;
   298  0739  1114               	bcf	20,2	;volatile
   299                           
   300                           ;main.c: 101: SSPCONbits.SSPM3=0;
   301  073A  1194               	bcf	20,3	;volatile
   302                           
   303                           ;main.c: 104: SSPSTATbits.SMP=0;
   304  073B  1683               	bsf	3,5	;RP0=1, select bank1
   305  073C  1303               	bcf	3,6	;RP1=0, select bank1
   306  073D  1394               	bcf	20,7	;volatile
   307                           
   308                           ;main.c: 105: SSPSTATbits.CKE=1;
   309  073E  1714               	bsf	20,6	;volatile
   310                           
   311                           ;main.c: 107: SSPCONbits.SSPEN=1;
   312  073F  1283               	bcf	3,5	;RP0=0, select bank0
   313  0740  1303               	bcf	3,6	;RP1=0, select bank0
   314  0741  1694               	bsf	20,5	;volatile
   315  0742                     l811:	
   316                           ;main.c: 110: while(1)
   317                           
   318                           
   319                           ;main.c: 111: {
   320                           ;main.c: 114: PORTBbits.RB3=0;
   321  0742  1283               	bcf	3,5	;RP0=0, select bank0
   322  0743  1303               	bcf	3,6	;RP1=0, select bank0
   323  0744  1186               	bcf	6,3	;volatile
   324                           
   325                           ;main.c: 115: _delay((unsigned long)((2)*(8000000/4000000.0)));
   326  0745  2F46               	nop2	;2 cycle nop
   327  0746  2F47               	nop2	;2 cycle nop
   328                           
   329                           ;main.c: 116: raw.byte.lsB4=ReadSPI();
   330  0747  118A  2679  118A   	fcall	_ReadSPI
   331  074A  1283               	bcf	3,5	;RP0=0, select bank0
   332  074B  1303               	bcf	3,6	;RP1=0, select bank0
   333  074C  0838               	movf	main@raw+3,w
   334  074D  0670               	xorwf	?_ReadSPI,w
   335  074E  3900               	andlw	-256
   336  074F  0670               	xorwf	?_ReadSPI,w
   337  0750  00B8               	movwf	main@raw+3
   338                           
   339                           ;main.c: 117: raw.byte.lsB3=ReadSPI();
   340  0751  118A  2679  118A   	fcall	_ReadSPI
   341  0754  1283               	bcf	3,5	;RP0=0, select bank0
   342  0755  1303               	bcf	3,6	;RP1=0, select bank0
   343  0756  0837               	movf	main@raw+2,w
   344  0757  0670               	xorwf	?_ReadSPI,w
   345  0758  3900               	andlw	-256
   346  0759  0670               	xorwf	?_ReadSPI,w
   347  075A  00B7               	movwf	main@raw+2
   348                           
   349                           ;main.c: 118: raw.byte.lsB2=ReadSPI();
   350  075B  118A  2679  118A   	fcall	_ReadSPI
   351  075E  1283               	bcf	3,5	;RP0=0, select bank0
   352  075F  1303               	bcf	3,6	;RP1=0, select bank0
   353  0760  0836               	movf	main@raw+1,w
   354  0761  0670               	xorwf	?_ReadSPI,w
   355  0762  3900               	andlw	-256
   356  0763  0670               	xorwf	?_ReadSPI,w
   357  0764  00B6               	movwf	main@raw+1
   358                           
   359                           ;main.c: 119: raw.byte.lsB1=ReadSPI();
   360  0765  118A  2679  118A   	fcall	_ReadSPI
   361  0768  1283               	bcf	3,5	;RP0=0, select bank0
   362  0769  1303               	bcf	3,6	;RP1=0, select bank0
   363  076A  0835               	movf	main@raw,w
   364  076B  0670               	xorwf	?_ReadSPI,w
   365  076C  3900               	andlw	-256
   366  076D  0670               	xorwf	?_ReadSPI,w
   367  076E  00B5               	movwf	main@raw
   368                           
   369                           ;main.c: 120: PORTBbits.RB3=1;
   370  076F  1586               	bsf	6,3	;volatile
   371                           
   372                           ;main.c: 122: MAXdata.val=raw.val;
   373  0770  0838               	movf	main@raw+3,w
   374  0771  00B4               	movwf	main@MAXdata+3
   375  0772  0837               	movf	main@raw+2,w
   376  0773  00B3               	movwf	main@MAXdata+2
   377  0774  0836               	movf	main@raw+1,w
   378  0775  00B2               	movwf	main@MAXdata+1
   379  0776  0835               	movf	main@raw,w
   380  0777  00B1               	movwf	main@MAXdata
   381                           
   382                           ;main.c: 124: calInt=0;
   383  0778  01B0               	clrf	main@calInt
   384                           
   385                           ;main.c: 126: Tint= (( MAXdata.fields.Tint2*16 + MAXdata.fields.Tint1 )* 25 )/400 - calI
      +                          nt;
   386  0779  0830               	movf	main@calInt,w
   387  077A  00A4               	movwf	??_main
   388  077B  01A5               	clrf	??_main+1
   389  077C  09A4               	comf	??_main,f
   390  077D  09A5               	comf	??_main+1,f
   391  077E  0AA4               	incf	??_main,f
   392  077F  1903               	skipnz
   393  0780  0AA5               	incf	??_main+1,f
   394  0781  3090               	movlw	144
   395  0782  00F6               	movwf	?___awdiv
   396  0783  3001               	movlw	1
   397  0784  00F7               	movwf	?___awdiv+1
   398  0785  0832               	movf	main@MAXdata+1,w
   399  0786  39FF               	andlw	255
   400  0787  00A6               	movwf	??_main+2
   401  0788  01A7               	clrf	??_main+3
   402  0789  0EA6               	swapf	??_main+2,f
   403  078A  0EA7               	swapf	??_main+3,f
   404  078B  30F0               	movlw	240
   405  078C  05A7               	andwf	??_main+3,f
   406  078D  0826               	movf	??_main+2,w
   407  078E  390F               	andlw	15
   408  078F  04A7               	iorwf	??_main+3,f
   409  0790  30F0               	movlw	240
   410  0791  05A6               	andwf	??_main+2,f
   411  0792  0E31               	swapf	main@MAXdata,w
   412  0793  390F               	andlw	15
   413  0794  0726               	addwf	??_main+2,w
   414  0795  00F0               	movwf	?___wmul
   415  0796  3000               	movlw	0
   416  0797  1803               	skipnc
   417  0798  3001               	movlw	1
   418  0799  0727               	addwf	??_main+3,w
   419  079A  00F1               	movwf	?___wmul+1
   420  079B  3019               	movlw	25
   421  079C  00F2               	movwf	?___wmul+2
   422  079D  3000               	movlw	0
   423  079E  00F3               	movwf	?___wmul+3
   424  079F  118A  2691  118A   	fcall	___wmul
   425  07A2  0871               	movf	?___wmul+1,w
   426  07A3  01F9               	clrf	?___awdiv+3
   427  07A4  07F9               	addwf	?___awdiv+3,f
   428  07A5  0870               	movf	?___wmul,w
   429  07A6  01F8               	clrf	?___awdiv+2
   430  07A7  07F8               	addwf	?___awdiv+2,f
   431  07A8  118A  26B4  118A   	fcall	___awdiv
   432  07AB  1283               	bcf	3,5	;RP0=0, select bank0
   433  07AC  1303               	bcf	3,6	;RP1=0, select bank0
   434  07AD  0824               	movf	??_main,w
   435  07AE  0776               	addwf	?___awdiv,w
   436  07AF  00AC               	movwf	main@Tint
   437  07B0  0825               	movf	??_main+1,w
   438  07B1  1803               	skipnc
   439  07B2  0A25               	incf	??_main+1,w
   440  07B3  0777               	addwf	?___awdiv+1,w
   441  07B4  00AD               	movwf	main@Tint+1
   442  07B5  01AE               	clrf	main@Tint+2
   443  07B6  1BAD               	btfsc	main@Tint+1,7
   444  07B7  03AE               	decf	main@Tint+2,f
   445  07B8  082E               	movf	main@Tint+2,w
   446  07B9  00AF               	movwf	main@Tint+3
   447                           
   448                           ;main.c: 127: Text= ((MAXdata.fields.Text2*64 + MAXdata.fields.Text1)* 25 )/100;
   449  07BA  3064               	movlw	100
   450  07BB  00F6               	movwf	?___awdiv
   451  07BC  3000               	movlw	0
   452  07BD  00F7               	movwf	?___awdiv+1
   453  07BE  0834               	movf	main@MAXdata+3,w
   454  07BF  39FF               	andlw	255
   455  07C0  00A4               	movwf	??_main
   456  07C1  01A5               	clrf	??_main+1
   457  07C2  3006               	movlw	6
   458  07C3  00FF               	movwf	127
   459  07C4                     u335:	
   460  07C4  1003               	clrc
   461  07C5  0DA4               	rlf	??_main,f
   462  07C6  0DA5               	rlf	??_main+1,f
   463  07C7  0BFF               	decfsz	127,f
   464  07C8  2FC4               	goto	u335
   465  07C9  0C33               	rrf	main@MAXdata+2,w
   466  07CA  00A6               	movwf	??_main+2
   467  07CB  0C26               	rrf	??_main+2,w
   468  07CC  393F               	andlw	63
   469  07CD  0724               	addwf	??_main,w
   470  07CE  00F0               	movwf	?___wmul
   471  07CF  3000               	movlw	0
   472  07D0  1803               	skipnc
   473  07D1  3001               	movlw	1
   474  07D2  0725               	addwf	??_main+1,w
   475  07D3  00F1               	movwf	?___wmul+1
   476  07D4  3019               	movlw	25
   477  07D5  00F2               	movwf	?___wmul+2
   478  07D6  3000               	movlw	0
   479  07D7  00F3               	movwf	?___wmul+3
   480  07D8  118A  2691  118A   	fcall	___wmul
   481  07DB  0871               	movf	?___wmul+1,w
   482  07DC  01F9               	clrf	?___awdiv+3
   483  07DD  07F9               	addwf	?___awdiv+3,f
   484  07DE  0870               	movf	?___wmul,w
   485  07DF  01F8               	clrf	?___awdiv+2
   486  07E0  07F8               	addwf	?___awdiv+2,f
   487  07E1  118A  26B4  118A   	fcall	___awdiv
   488  07E4  0876               	movf	?___awdiv,w
   489  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   490  07E6  1303               	bcf	3,6	;RP1=0, select bank0
   491  07E7  00A8               	movwf	main@Text
   492  07E8  0877               	movf	?___awdiv+1,w
   493  07E9  00A9               	movwf	main@Text+1
   494  07EA  3000               	movlw	0
   495  07EB  1BA9               	btfsc	main@Text+1,7
   496  07EC  30FF               	movlw	255
   497  07ED  00AA               	movwf	main@Text+2
   498  07EE  00AB               	movwf	main@Text+3
   499                           
   500                           ;main.c: 129: _delay((unsigned long)((500)*(8000000/4000.0)));
   501  07EF  3006               	movlw	6
   502  07F0  00A6               	movwf	??_main+2
   503  07F1  3013               	movlw	19
   504  07F2  00A5               	movwf	??_main+1
   505  07F3  30B1               	movlw	177
   506  07F4  00A4               	movwf	??_main
   507  07F5                     u347:	
   508  07F5  0BA4               	decfsz	??_main,f
   509  07F6  2FF5               	goto	u347
   510  07F7  0BA5               	decfsz	??_main+1,f
   511  07F8  2FF5               	goto	u347
   512  07F9  0BA6               	decfsz	??_main+2,f
   513  07FA  2FF5               	goto	u347
   514  07FB  2FFC               	nop2
   515  07FC  2F42               	goto	l811
   516  07FD                     __end_of_main:	
   517                           
   518                           	psect	text1
   519  0691                     __ptext1:	
   520 ;; *************** function ___wmul *****************
   521 ;; Defined at:
   522 ;;		line 3 in file "/home/frico/microchip/xc8/v1.21/sources/pic/wmul.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;  multiplier      2    0[COMMON] unsigned int 
   525 ;;  multiplicand    2    2[COMMON] unsigned int 
   526 ;; Auto vars:     Size  Location     Type
   527 ;;  product         2    4[COMMON] unsigned int 
   528 ;; Return value:  Size  Location     Type
   529 ;;                  2    0[COMMON] unsigned int 
   530 ;; Registers used:
   531 ;;		wreg, status,2, status,0
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   537 ;;      Params:         4       0       0       0       0
   538 ;;      Locals:         2       0       0       0       0
   539 ;;      Temps:          0       0       0       0       0
   540 ;;      Totals:         6       0       0       0       0
   541 ;;Total ram usage:        6 bytes
   542 ;; Hardware stack levels used:    1
   543 ;; This function calls:
   544 ;;		Nothing
   545 ;; This function is called by:
   546 ;;		_main
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           
   551                           ;psect for function ___wmul
   552  0691                     ___wmul:	
   553                           
   554                           ;incstack = 0
   555                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   556  0691  01F4               	clrf	___wmul@product
   557  0692  01F5               	clrf	___wmul@product+1
   558  0693                     l723:	
   559  0693  1C70               	btfss	___wmul@multiplier,0
   560  0694  2E9B               	goto	l475
   561  0695  0872               	movf	___wmul@multiplicand,w
   562  0696  07F4               	addwf	___wmul@product,f
   563  0697  1803               	skipnc
   564  0698  0AF5               	incf	___wmul@product+1,f
   565  0699  0873               	movf	___wmul@multiplicand+1,w
   566  069A  07F5               	addwf	___wmul@product+1,f
   567  069B                     l475:	
   568  069B  3001               	movlw	1
   569  069C                     u205:	
   570  069C  1003               	clrc
   571  069D  0DF2               	rlf	___wmul@multiplicand,f
   572  069E  0DF3               	rlf	___wmul@multiplicand+1,f
   573  069F  3EFF               	addlw	-1
   574  06A0  1D03               	skipz
   575  06A1  2E9C               	goto	u205
   576  06A2  3001               	movlw	1
   577  06A3                     u215:	
   578  06A3  1003               	clrc
   579  06A4  0CF1               	rrf	___wmul@multiplier+1,f
   580  06A5  0CF0               	rrf	___wmul@multiplier,f
   581  06A6  3EFF               	addlw	-1
   582  06A7  1D03               	skipz
   583  06A8  2EA3               	goto	u215
   584  06A9  0871               	movf	___wmul@multiplier+1,w
   585  06AA  0470               	iorwf	___wmul@multiplier,w
   586  06AB  1D03               	skipz
   587  06AC  2E93               	goto	l723
   588  06AD  0875               	movf	___wmul@product+1,w
   589  06AE  01F1               	clrf	?___wmul+1
   590  06AF  07F1               	addwf	?___wmul+1,f
   591  06B0  0874               	movf	___wmul@product,w
   592  06B1  01F0               	clrf	?___wmul
   593  06B2  07F0               	addwf	?___wmul,f
   594  06B3  0008               	return
   595  06B4                     __end_of___wmul:	
   596                           
   597                           	psect	text2
   598  06B4                     __ptext2:	
   599 ;; *************** function ___awdiv *****************
   600 ;; Defined at:
   601 ;;		line 5 in file "/home/frico/microchip/xc8/v1.21/sources/pic/awdiv.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;  divisor         2    6[COMMON] int 
   604 ;;  dividend        2    8[COMMON] int 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  quotient        2    2[BANK0 ] int 
   607 ;;  sign            1    1[BANK0 ] unsigned char 
   608 ;;  counter         1    0[BANK0 ] unsigned char 
   609 ;; Return value:  Size  Location     Type
   610 ;;                  2    6[COMMON] int 
   611 ;; Registers used:
   612 ;;		wreg, status,2, status,0
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   618 ;;      Params:         4       0       0       0       0
   619 ;;      Locals:         0       4       0       0       0
   620 ;;      Temps:          1       0       0       0       0
   621 ;;      Totals:         5       4       0       0       0
   622 ;;Total ram usage:        9 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; This function calls:
   625 ;;		Nothing
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           
   632                           ;psect for function ___awdiv
   633  06B4                     ___awdiv:	
   634                           
   635                           ;incstack = 0
   636                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   637  06B4  1283               	bcf	3,5	;RP0=0, select bank0
   638  06B5  1303               	bcf	3,6	;RP1=0, select bank0
   639  06B6  01A1               	clrf	___awdiv@sign
   640  06B7  1FF7               	btfss	___awdiv@divisor+1,7
   641  06B8  2EC0               	goto	l741
   642  06B9  09F6               	comf	___awdiv@divisor,f
   643  06BA  09F7               	comf	___awdiv@divisor+1,f
   644  06BB  0AF6               	incf	___awdiv@divisor,f
   645  06BC  1903               	skipnz
   646  06BD  0AF7               	incf	___awdiv@divisor+1,f
   647  06BE  01A1               	clrf	___awdiv@sign
   648  06BF  0AA1               	incf	___awdiv@sign,f
   649  06C0                     l741:	
   650  06C0  1FF9               	btfss	___awdiv@dividend+1,7
   651  06C1  2ECB               	goto	l747
   652  06C2  09F8               	comf	___awdiv@dividend,f
   653  06C3  09F9               	comf	___awdiv@dividend+1,f
   654  06C4  0AF8               	incf	___awdiv@dividend,f
   655  06C5  1903               	skipnz
   656  06C6  0AF9               	incf	___awdiv@dividend+1,f
   657  06C7  3001               	movlw	1
   658  06C8  00FA               	movwf	??___awdiv
   659  06C9  087A               	movf	??___awdiv,w
   660  06CA  06A1               	xorwf	___awdiv@sign,f
   661  06CB                     l747:	
   662  06CB  01A2               	clrf	___awdiv@quotient
   663  06CC  01A3               	clrf	___awdiv@quotient+1
   664  06CD  0877               	movf	___awdiv@divisor+1,w
   665  06CE  0476               	iorwf	___awdiv@divisor,w
   666  06CF  1903               	skipnz
   667  06D0  2F02               	goto	l769
   668  06D1  01A0               	clrf	___awdiv@counter
   669  06D2  0AA0               	incf	___awdiv@counter,f
   670  06D3                     l757:	
   671  06D3  1BF7               	btfsc	___awdiv@divisor+1,7
   672  06D4  2EE1               	goto	l759
   673  06D5  3001               	movlw	1
   674  06D6                     u265:	
   675  06D6  1003               	clrc
   676  06D7  0DF6               	rlf	___awdiv@divisor,f
   677  06D8  0DF7               	rlf	___awdiv@divisor+1,f
   678  06D9  3EFF               	addlw	-1
   679  06DA  1D03               	skipz
   680  06DB  2ED6               	goto	u265
   681  06DC  3001               	movlw	1
   682  06DD  00FA               	movwf	??___awdiv
   683  06DE  087A               	movf	??___awdiv,w
   684  06DF  07A0               	addwf	___awdiv@counter,f
   685  06E0  2ED3               	goto	l757
   686  06E1                     l759:	
   687  06E1  3001               	movlw	1
   688  06E2                     u285:	
   689  06E2  1003               	clrc
   690  06E3  0DA2               	rlf	___awdiv@quotient,f
   691  06E4  0DA3               	rlf	___awdiv@quotient+1,f
   692  06E5  3EFF               	addlw	-1
   693  06E6  1D03               	skipz
   694  06E7  2EE2               	goto	u285
   695  06E8  0877               	movf	___awdiv@divisor+1,w
   696  06E9  0279               	subwf	___awdiv@dividend+1,w
   697  06EA  1D03               	skipz
   698  06EB  2EEE               	goto	u295
   699  06EC  0876               	movf	___awdiv@divisor,w
   700  06ED  0278               	subwf	___awdiv@dividend,w
   701  06EE                     u295:	
   702  06EE  1C03               	skipc
   703  06EF  2EF7               	goto	l765
   704  06F0  0876               	movf	___awdiv@divisor,w
   705  06F1  02F8               	subwf	___awdiv@dividend,f
   706  06F2  0877               	movf	___awdiv@divisor+1,w
   707  06F3  1C03               	skipc
   708  06F4  03F9               	decf	___awdiv@dividend+1,f
   709  06F5  02F9               	subwf	___awdiv@dividend+1,f
   710  06F6  1422               	bsf	___awdiv@quotient,0
   711  06F7                     l765:	
   712  06F7  3001               	movlw	1
   713  06F8                     u305:	
   714  06F8  1003               	clrc
   715  06F9  0CF7               	rrf	___awdiv@divisor+1,f
   716  06FA  0CF6               	rrf	___awdiv@divisor,f
   717  06FB  3EFF               	addlw	-1
   718  06FC  1D03               	skipz
   719  06FD  2EF8               	goto	u305
   720  06FE  3001               	movlw	1
   721  06FF  02A0               	subwf	___awdiv@counter,f
   722  0700  1D03               	btfss	3,2
   723  0701  2EE1               	goto	l759
   724  0702                     l769:	
   725  0702  0821               	movf	___awdiv@sign,w
   726  0703  1903               	btfsc	3,2
   727  0704  2F0A               	goto	l773
   728  0705  09A2               	comf	___awdiv@quotient,f
   729  0706  09A3               	comf	___awdiv@quotient+1,f
   730  0707  0AA2               	incf	___awdiv@quotient,f
   731  0708  1903               	skipnz
   732  0709  0AA3               	incf	___awdiv@quotient+1,f
   733  070A                     l773:	
   734  070A  0823               	movf	___awdiv@quotient+1,w
   735  070B  01F7               	clrf	?___awdiv+1
   736  070C  07F7               	addwf	?___awdiv+1,f
   737  070D  0822               	movf	___awdiv@quotient,w
   738  070E  01F6               	clrf	?___awdiv
   739  070F  07F6               	addwf	?___awdiv,f
   740  0710  0008               	return
   741  0711                     __end_of___awdiv:	
   742                           
   743                           	psect	text3
   744  0679                     __ptext3:	
   745 ;; *************** function _ReadSPI *****************
   746 ;; Defined at:
   747 ;;		line 61 in file "main.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;  databyte        2    4[COMMON] unsigned int 
   752 ;; Return value:  Size  Location     Type
   753 ;;                  2    0[COMMON] unsigned int 
   754 ;; Registers used:
   755 ;;		wreg, status,2, status,0
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         2       0       0       0       0
   762 ;;      Locals:         2       0       0       0       0
   763 ;;      Temps:          2       0       0       0       0
   764 ;;      Totals:         6       0       0       0       0
   765 ;;Total ram usage:        6 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; This function calls:
   768 ;;		Nothing
   769 ;; This function is called by:
   770 ;;		_main
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           
   775                           ;psect for function _ReadSPI
   776  0679                     _ReadSPI:	
   777                           
   778                           ;main.c: 62: unsigned int databyte;
   779                           ;main.c: 64: PIR1bits.SSPIF=0;
   780                           
   781                           ;incstack = 0
   782                           ; Regs used in _ReadSPI: [wreg+status,2+status,0]
   783  0679  1283               	bcf	3,5	;RP0=0, select bank0
   784  067A  1303               	bcf	3,6	;RP1=0, select bank0
   785  067B  118C               	bcf	12,3	;volatile
   786                           
   787                           ;main.c: 65: SSPBUF = 0x00;
   788  067C  0193               	clrf	19	;volatile
   789  067D                     l33:	
   790                           ;main.c: 66: while(!SSPSTATbits.BF);
   791                           
   792  067D  1683               	bsf	3,5	;RP0=1, select bank1
   793  067E  1303               	bcf	3,6	;RP1=0, select bank1
   794  067F  1C14               	btfss	20,0	;volatile
   795  0680  2E7D               	goto	l33
   796                           
   797                           ;main.c: 68: databyte = SSPBUF;
   798  0681  1283               	bcf	3,5	;RP0=0, select bank0
   799  0682  1303               	bcf	3,6	;RP1=0, select bank0
   800  0683  0813               	movf	19,w	;volatile
   801  0684  00F2               	movwf	??_ReadSPI
   802  0685  01F3               	clrf	??_ReadSPI+1
   803  0686  0872               	movf	??_ReadSPI,w
   804  0687  00F4               	movwf	ReadSPI@databyte
   805  0688  0873               	movf	??_ReadSPI+1,w
   806  0689  00F5               	movwf	ReadSPI@databyte+1
   807                           
   808                           ;main.c: 69: return (databyte);
   809  068A  0875               	movf	ReadSPI@databyte+1,w
   810  068B  01F1               	clrf	?_ReadSPI+1
   811  068C  07F1               	addwf	?_ReadSPI+1,f
   812  068D  0874               	movf	ReadSPI@databyte,w
   813  068E  01F0               	clrf	?_ReadSPI
   814  068F  07F0               	addwf	?_ReadSPI,f
   815  0690  0008               	return
   816  0691                     __end_of_ReadSPI:	
   817  007E                     btemp	set	126	;btemp
   818  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     25      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ?___wmul	unsigned int  size(1) Largest target is 0

    ?___awdiv	int  size(1) Largest target is 0

    ?_ReadSPI	unsigned int  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0     626
                                              4 BANK0     21    21      0
                            _ReadSPI
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4      92
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     300
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ReadSPI                                              6     4      2      23
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadSPI
   ___awdiv
     ___wmul (ARG)
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       1       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Sun Dec  8 18:37:51 2013

            __CFG_CP$OFF 0000              _SSPSTATbits 0094                       l33 067D  
           ___awdiv@sign 0021      ___wmul@multiplicand 0072                      l475 069B  
                    l723 0693                      l811 0742                      l741 06C0  
                    l747 06CB                      l773 070A                      l765 06F7  
                    l757 06D3                      l759 06E1                      l769 0702  
                    u205 069C                      u215 06A3                      u305 06F8  
                    u335 07C4                      u265 06D6             __CFG_CPD$OFF 0000  
                    u347 07F5                      u285 06E2                      u295 06EE  
           __CFG_IESO$ON 0000             __CFG_LVP$OFF 0000             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _main 0711                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000            __CFG_MCLRE$ON 0000  
        __end_of_ReadSPI 0691                    ?_main 0070          __end_of___awdiv 0711  
          __CFG_WDTE$OFF 0000          ___awdiv@divisor 0076          ___awdiv@counter 0020  
         __CFG_CCPMX$RB0 0000                    status 0003                    wtemp0 007E  
        __initialization 07FD             __end_of_main 07FD                   ??_main 0024  
        ReadSPI@databyte 0074         ___awdiv@dividend 0078                   _INTCON 000B  
                 _OSCCON 008F                   _SSPBUF 0013                ??_ReadSPI 0072  
         __CFG_PWRTE$OFF 0000                   ___wmul 0691                ??___awdiv 007A  
       ___awdiv@quotient 0022  __end_of__initialization 07FD           __pcstackCOMMON 0070  
             __pmaintext 0711                  ?___wmul 0070                  _ReadSPI 0679  
                ___awdiv 06B4          __size_of___wmul 0023                  __ptext0 0000  
                __ptext1 0691                  __ptext2 06B4                  __ptext3 0679  
                main@raw 0035     end_of_initialization 07FD                _RCSTAbits 0018  
              _PORTBbits 0006                _TRISAbits 0085                _TRISBbits 0086  
             main@calInt 0030              _CCP1CONbits 0017           __end_of___wmul 06B4  
    start_initialization 07FD                 ??___wmul 0074            __pcstackBANK0 0020  
               ?_ReadSPI 0070                 ?___awdiv 0076           ___wmul@product 0074  
               _PIR1bits 000C        ___wmul@multiplier 0070         __size_of_ReadSPI 0018  
       __size_of___awdiv 005D            __size_of_main 00EC                 main@Tint 002C  
               main@Text 0028      __CFG_FOSC$INTOSCCLK 0000              main@MAXdata 0031  
             _SSPCONbits 0014  
